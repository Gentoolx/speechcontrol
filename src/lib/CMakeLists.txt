project(SpeechControlLibrary)
cmake_minimum_required(VERSION 2.8)

## setting up sources
file(GLOB_RECURSE SPCHCNTRL_LIB_SRCS "*.cpp" "*.cxx")

## variables
set(SPCHCNTRL_LIB_MAJOR_VERSION 0)
set(SPCHCNTRL_LIB_MINOR_VERSION 1)
set(SPCHCNTRL_LIB_VERSION "${SPCHCNTRL_LIB_MAJOR_VERSION}.${SPCHCNTRL_LIB_MINOR_VERSION}")
set(SPCHCNTRL_LIB_COMPILE_DEFINITIONS ${SPCHCNTRL_COMPILE_DEFINITIONS})
set(SPCHCNTRL_LIB_COMPILE_FLAGS ${SPCHCNTRL_COMPILE_FLAGS})
set(SPCHCNTRL_LIB_COMPILE_FLAGS_DEBUG ${SPCHCNTRL_COMPILE_FLAGS_DEBUG})
set(SPCHCNTRL_LIB_INCLUDE_DIR "${SPCHCNTRL_INCLUDE_DIR}/lib")
set(SPCHCNTRL_LIB_INCLUDE_DIRS ${SPCHCNTRL_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIR})
set(SPCHCNTRL_LIB_LIBRARIES ${SPCHCNTRL_LIBRARIES})

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(SPCHCNTRL_LIB_COMPILE_FLAGS "${SPCHCNTRL_LIB_COMPILE_FLAGS} ${SPCHCNTRL_LIB_COMPILE_FLAGS_DEBUG}")
endif (CMAKE_BUILD_TYPE STREQUAL "Debug")

## set up build variables
set(SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS ${SPCHCNTRL_BUILD_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIRS}
    ${PROJECT_SOURCE_DIR}
    ${PROJECT_BINARY_DIR})
set(SPCHCNTRL_LIB_BUILD_COMPILE_DEFINITIONS ${SPCHCNTRL_LIB_COMPILE_DEFINITIONS})
list(REMOVE_ITEM SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS ${SPCHCNTRL_LIB_INCLUDE_DIR})

## configures
configure_file("${PROJECT_SOURCE_DIR}/config.hpp.in"
    "${PROJECT_SOURCE_DIR}/config.hpp" @ONLY)

## Some Qt-specific stuff.
QT4_AUTOMOC(${SPCHCNTRL_LIB_SRCS})

## Define the target
add_definitions(${SPCHCNTRL_LIB_COMPILE_DEFINITIONS})
add_library(speechcontrol SHARED ${SPCHCNTRL_LIB_SRCS})
set_target_properties(speechcontrol PROPERTIES
    COMPILE_FLAGS "${SPCHCNTRL_LIB_COMPILE_FLAGS}"
    DEFINE_SYMBOL "SPCH_EXPORT_SYMBOLS"
    VERSION "${SPCHCNTRL_LIB_VERSION}"
    SOVERSION "${SPCHCNTRL_LIB_VERSION}")

target_link_libraries(speechcontrol ${SPCHCNTRL_LIB_LIBRARIES})

include_directories(${SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS})
add_subdirectory(cmake)
file(MAKE_DIRECTORY "${PROJECT_BINARY_DIR}/sphinx")
file(MAKE_DIRECTORY "${PROJECT_BINARY_DIR}/audiosource")

## Install stuff.
install(TARGETS speechcontrol
    EXPORT SpeechControlLibraryDepends
    LIBRARY DESTINATION "${SPCHCNTRL_LIB_DIR}")

install(EXPORT SpeechControlLibraryDepends
    DESTINATION "${SPCHCNTRL_CMAKE_DIR}"
    COMPONENT "dev")

install(DIRECTORY   "${CMAKE_CURRENT_SOURCE_DIR}/"
        DESTINATION "${SPCHCNTRL_LIB_INCLUDE_DIR}"
        COMPONENT "dev"
        FILES_MATCHING
            PATTERN "*.hpp"
            PATTERN "*private.hpp"
            PATTERN "*_pprivate.hpp" EXCLUDE
            PATTERN "cmake"   EXCLUDE)