project(SpeechControlLibrary)
cmake_minimum_required(VERSION 2.8)

## setting up sources
file(GLOB SPCHCNTRL_LIB_SRCS "*.cpp")
file(GLOB SPCHCNTRL_LIB_HDRS "*.hpp")
file(GLOB SPCHCNTRL_LIB_PRIVSRCS "*.cxx")
file(GLOB SPCHCNTRL_LIB_PRIVHDRS "*.hxx")
file(GLOB SPCHCNTRL_LIB_AUDIOSOURCE_SRCS "audiosource/*.cpp")
file(GLOB SPCHCNTRL_LIB_AUDIOSOURCE_HDRS "audiosource/*.hpp")
file(GLOB SPCHCNTRL_LIB_AUDIOSOURCE_PRIVSRCS "audiosource/*.cxx")
file(GLOB SPCHCNTRL_LIB_AUDIOSOURCE_PRIVHDRS "audiosource/*.hxx")
file(GLOB SPCHCNTRL_LIB_SPHINX_SRCS "sphinx/*.cpp")
file(GLOB SPCHCNTRL_LIB_SPHINX_HDRS "sphinx/*.hpp")
file(GLOB SPCHCNTRL_LIB_SPHINX_PRIVSRCS "sphinx/*.cxx")
file(GLOB SPCHCNTRL_LIB_SPHINX_PRIVHDRS "sphinx/*.hxx")

set(SPCHCNTRL_LIB_SOURCES ${SPCHCNTRL_LIB_AUDIOSOURCE_SRCS}
    ${SPCHCNTRL_LIB_SPHINX_SRCS}
    ${SPCHCNTRL_LIB_SRCS})
set(SPCHCNTRL_LIB_PRIVSOURCES ${SPCHCNTRL_LIB_AUDIOSOURCE_PRIVSRCS}
    ${SPCHCNTRL_LIB_SPHINX_PRIVSRCS}
    ${SPCHCNTRL_LIB_PRIVSRCS})
set(SPCHCNTRL_LIB_ALLSRCS ${SPCHCNTRL_LIB_SOURCES}
    ${SPCHCNTRL_LIB_PRIVSOURCES})

## variables
set(SPCHCNTRL_LIB_MAJOR_VERSION 0)
set(SPCHCNTRL_LIB_MINOR_VERSION 1)
set(SPCHCNTRL_LIB_VERSION "${SPCHCNTRL_LIB_MAJOR_VERSION}.${SPCHCNTRL_LIB_MINOR_VERSION}")
set(SPCHCNTRL_LIB_VERSION "${SPCHCNTRL_LIB_MAJOR_VERSION}.${SPCHCNTRL_LIB_MINOR_VERSION}")
set(SPCHCNTRL_LIB_COMPILE_DEFINITIONS ${SPCHCNTRL_COMPILE_DEFINITIONS} CACHE STRING INTERNAL)
set(SPCHCNTRL_LIB_COMPILE_FLAGS ${SPCHCNTRL_COMPILE_FLAGS})
set(SPCHCNTRL_LIB_COMPILE_FLAGS_DEBUG ${SPCHCNTRL_COMPILE_FLAGS_DEBUG})
set(SPCHCNTRL_LIB_INCLUDE_DIR "${SPCHCNTRL_INCLUDE_DIR}/lib")
set(SPCHCNTRL_LIB_INCLUDE_DIRS ${SPCHCNTRL_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIR})
set(SPCHCNTRL_LIB_LIBRARIES ${SPCHCNTRL_LIBRARIES})

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(SPCHCNTRL_LIB_COMPILE_FLAGS "${SPCHCNTRL_LIB_COMPILE_FLAGS} ${SPCHCNTRL_LIB_COMPILE_FLAGS_DEBUG}")
endif (CMAKE_BUILD_TYPE STREQUAL "Debug")

## set up build variables
set(SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS ${SPCHCNTRL_BUILD_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIRS}
    ${PROJECT_SOURCE_DIR}
    ${PROJECT_BINARY_DIR})
set(SPCHCNTRL_LIB_BUILD_COMPILE_DEFINITIONS ${SPCHCNTRL_LIB_COMPILE_DEFINITIONS})
list(REMOVE_ITEM SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS ${SPCHCNTRL_LIB_INCLUDE_DIR})

## configures
configure_file("${PROJECT_SOURCE_DIR}/config.hpp.in"
    "${PROJECT_SOURCE_DIR}/config.hpp" @ONLY)

## Some Qt-specific stuff.
QT4_AUTOMOC(${SPCHCNTRL_LIB_ALLSRCS})

## Define the target
add_library(speechcontrol SHARED ${SPCHCNTRL_LIB_ALLSRCS})
set_target_properties(speechcontrol PROPERTIES
    COMPILE_FLAGS "${SPCHCNTRL_LIB_COMPILE_FLAGS}"
    COMPILE_DEFINITIONS "${SPCHCNTRL_LIB_BUILD_COMPILE_DEFINITIONS}"
    DEFINE_SYMBOL "SPCH_EXPORT_SYMBOLS"
    VERSION "${SPCHCNTRL_LIB_VERSION}"
    SOVERSION "${SPCHCNTRL_LIB_VERSION}")

target_link_libraries(speechcontrol ${SPCHCNTRL_LIB_LIBRARIES})

## Install stuff.
install(TARGETS speechcontrol
    EXPORT SpeechControlLibraryDepends
    LIBRARY DESTINATION "${SPCHCNTRL_LIB_DIR}")

install(EXPORT SpeechControlLibraryDepends
    DESTINATION "${SPCHCNTRL_CMAKE_DIR}"
    COMPONENT "dev")

install(FILES ${SPCHCNTRL_LIB_HDRS}
    DESTINATION "${SPCHCNTRL_LIB_INCLUDE_DIR}"
    COMPONENT "dev")

install(FILES ${SPCHCNTRL_LIB_PRIVHDRS}
    DESTINATION "${SPCHCNTRL_LIB_INCLUDE_DIR}-private"
    COMPONENT "dev")

include_directories(${SPCHCNTRL_LIB_BUILD_INCLUDE_DIRS})

add_subdirectory(cmake)
add_subdirectory(sphinx)
add_subdirectory(audiosource)