/***
 *  This file is part of the SpeechControl project.
 *
 *  Copyright (C) 2012 Jacky Alciné <jackyalcine@gmail.com>
 *
 *  SpeechControl is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 *  SpeechControl is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public
 *  License along with SpeechControl.
 *  If not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

/**
 * @author Jacky Alciné <jackyalcine@gmail.com>
 * @date 05/16/12 20:16:26 PM
 */

#ifndef SC_LIB_GLOBAL_HPP
#define SC_LIB_GLOBAL_HPP

/**
 * @def POCKETSPHINX_MODELDIR
 * @ingroup SpeechControlMacros
 * @brief Holds the build-time value of the location of PocketSphinx's pre-built modules.
 */
#define POCKETSPHINX_MODELDIR "@POCKETSPHINX_MODELDIR@"

/**
 * @def POCKETSPHINX_VERSION
 * @ingroup SpeechControlMacros
 * @brief Holds the version information of PocketSphinx.
 */
#define POCKETSPHINX_VERSION "@POCKETSPHINX_VERSION@"

/**
 * @def SC_BUILD_VERSION
 * @ingroup SpeechControlMacros
 * @brief Holds the build version of SpeechControl's library.
 */
#define SC_BUILD_VERSION "@SC_LIB_VERSION@"

/**
 * @def SC_BUILD_DATE
 * @ingroup SpeechControlMacros
 * @brief Holds the date that of which SpeechControl's library was built.
 */
#define SC_BUILD_DATE __TIMESTAMP__

/**
 * @def CORPUS_WORD_BLOCK
 * @ingroup SpeechControlMacros
 * @brief Defines the default size of a phrase when rendering in a corpus.
 */
#define CORPUS_WORD_BLOCK 8

/**
 * @def CONTENT_CHUNK_SIZE
 * @ingroup SpeechControlMacros
 * @brief Defines the default count of alphanumerical characters to be considered one page in a Content.
 */
#define CONTENT_CHUNK_SIZE 250

/**
 * @def SC_SINGLETON
 * @ingroup SpeechControlMacros
 * @brief Defines a class as a singleton.
 */
#define SC_SINGLETON(Type) \
private:\
    static Type* s_inst;\
public:\
    static Type* instance ( )\
    {\
        if (s_inst == 0)\
        {\
            s_inst = new Type;\
            qDebug() << "[SC_SINGLETON()] Created singleton instance of " #Type << ".";\
        }\
    return s_inst;\
    }

/**
 * @def SC_INIT_SINGLETON
 * @ingroup SpeechControlMacros
 * @brief Initializes the singleton.
 */
#define SC_INIT_SINGLETON(Type) Type* Type::s_inst = 0;

#endif /* SC_LIB_GLOBAL_HPP */
// kate: indent-mode cstyle; indent-width 4; replace-tabs on;
