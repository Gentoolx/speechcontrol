# Try to find SphinxBase
# SPHINXBASE_FOUND
# SPHINXBASE_INCLUDE_DIRS
# SPHINXBASE_LIBRARIES
# SPHINXBASE_DEFINITIONS

find_package(PkgConfig)
pkg_check_modules(PC_SPHINXBASE QUIET sphinxbase)
set(SPHINXBASE_DEFINITIONS ${PC_SPHINXBASE_CFLAGS_OTHER})

find_path(SPHINXBASE_INCLUDE_DIR cmd_ln.h
    HINTS ${PC_SPHINXBASE_INCLUDEDIR} ${PC_SPHINXBASE_INCLUDE_DIRS})

find_library(SPHINXBASE_LIBRARY NAMES sphinxbase
    HINTS ${PC_SPHINXBASE_LIBDIR} ${PC_SPHINXBASE_LIBRARY_DIRS})

set(SPHINXBASE_INCLUDE_DIRS ${SPHINXBASE_INCLUDE_DIR})
set(SPHINXBASE_LIBRARIES ${SPHINXBASE_LIBRARY})

mark_as_advanced(SPHINXBASE_INCLUDE_DIR SPHINXBASE_LIBRARY)

## Report information back to the developer about it's state.
if (SPHINXBASE_LIBRARY STREQUAL "SPHINXBASE_LIBRARY-NOTFOUND")
    message(WARNING "SphinxBase library not found.")
else (SPHINXBASE_LIBRARY STREQUAL "SPHINXBASE_LIBRARY-NOTFOUND")
    message(STATUS "Found SphinxBase library: ${SPHINXBASE_LIBRARIES}")
endif (SPHINXBASE_LIBRARY STREQUAL "SPHINXBASE_LIBRARY-NOTFOUND")

if (SPHINXBASE_INCLUDE_DIR STREQUAL "SPHINXBASE_INCLUDE_DIR-NOTFOUND")
    message(WARNING "SphinxBase includes not found.")
else (SPHINXBASE_INCLUDE_DIR STREQUAL "SPHINXBASE_INCLUDE_DIR-NOTFOUND")
    message(STATUS "Found SphinxBase includes: ${SPHINXBASE_INCLUDE_DIRS}")
endif (SPHINXBASE_INCLUDE_DIR STREQUAL "SPHINXBASE_INCLUDE_DIR-NOTFOUND")