########################################
### Build file for @TEST_ID@         ###
### DO NOT EDIT! Generated by CMake. ###
########################################

project(SpchCntrlTest-@TEST_ID@)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(TEST_MODE "@TEST_MODE@")

## Add paths to find CMake information about the library and application.
find_package(SpeechControlLibrary)
find_package(Qt4 COMPONENTS
    QtTest REQUIRED)

if (TEST_MODE STREQUAL "APP")
    find_package(SpeechControlApplication)
endif (TEST_MODE STREQUAL "APP")

## Variables
set(@TEST_ID@_SCPP "@TEST_SRC@")
set(@TEST_ID@_LIBRARIES ${TEST_LIBRARIES})
set(@TEST_ID@_INCLUDE_DIRS ${TEST_INCLUDE_DIRS})
set(@TEST_ID@_COMPILE_DEFINTIONS ${TEST_COMPILE_DEFINITIONS})
set(@TEST_ID@_COMPILE_FLAGS ${TEST_COMPILE_FLAGS})

## Qt-specific actions.
QT4_AUTOMOC(${@TEST_ID@_SCPP})

## Variables
if (TEST_MODE STREQUAL "APP" OR TEST_MODE STREQUAL "PLUGIN")
    list(APPEND @TEST_ID@_INCLUDE_DIRS ${SPCHCNTRL_APP_INCLUDE_DIRS}
                                 "${CMAKE_BINARY_DIR}/src/app"
                                 "${CMAKE_SOURCE_DIR}/src/app"
                                 "${CMAKE_SOURCE_DIR}/src/app/services")
    list(APPEND @TEST_ID@_LIBRARIES ${SPCHCNTRL_APP_LIBRARIES} test-appcore ${PHONON_LIBRARIES} ${XDO_LIBRARIES})
    list(APPEND @TEST_ID@_COMPILE_DEFINITIONS ${SPCHCNTRL_APP_COMPILE_DEFINITIONS})
    list(APPEND @TEST_ID@_COMPILE_FLAGS ${SPCHCNTRL_APP_COMPILE_FLAGS})
endif()

if (TEST_MODE STREQUAL "PLUGIN")
    message(STATUS "Building plug-in tests are not yet fully supported.")
    list(APPEND @TEST_ID@_INCLUDE_DIRS "${CMAKE_BINARY_DIR}/src/plugins"
                                       "${CMAKE_SOURCE_DIR}/src/plugins")
endif (TEST_MODE STREQUAL "PLUGIN")

include_directories(${@TEST_ID@_INCLUDE_DIRS})

## Begin included code.

@TEST_CONFIG_CODE@

## End included code.

## Build test executable.
add_executable(test@TEST_ID@ ${@TEST_ID@_SCPP})
set_target_properties(test@TEST_ID@ PROPERTIES
    COMPILE_DEFINITIONS "${@TEST_ID@_COMPILE_DEFINITIONS}"
    COMPILE_FLAGS "${@TEST_ID@_COMPILE_FLAGS}"
    EchoString "Built test @TEST_ID@"
    EXCLUDE_FROM_ALL ON)
target_link_libraries(test@TEST_ID@ ${@TEST_ID@_LIBRARIES})

## Add test.
add_test(NAME test@TEST_ID@
         COMMAND $<TARGET_FILE:test@TEST_ID@>)
add_dependencies(tests test@TEST_ID@)

message(STATUS "Test '@TEST_ID@' configured; awaiting build [i.e.: 'make test@TEST_ID@']")