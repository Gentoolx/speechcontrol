########################################
### Build file for @TEST_ID@         ###
### DO NOT EDIT! Generated by CMake. ###
########################################

project(SpchCntrlTest-@TEST_ID@)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

message("${CMAKE_MODULE_PATH}")

find_package(SpeechControlApplication REQUIRED)
find_package(SpeechControlLibrary REQUIRED)

file(GLOB TEST_BASE_SRCS "../../*.cpp")
file(GLOB TEST_EXTRA_HDRS "../../../src/app/*.hpp"
                          "../../../src/app/windows/*/*.hpp"
                          "../../../src/app/dictation/*.hpp"
                          "../../../src/app/voxforge/*.hpp"
                          "../../../src/app/sessions/*.hpp"
                          "../../../src/app/dictation/*.hpp"
                          "../../../src/app/desktopcontrol/*.hpp")
set(TEST_BASE_SCPP ${TEST_BASE_SRCS} "@TEST_SRC@")

## Variables
set(TEST_COMPILE_DEFINITIONS ${SPCHCNTRL_COMPILE_DEFINITIONS}
                             MODULE=@TEST_ID@Suite)
set(TEST_COMPILE_FLAGS ${SPCHCNTRL_COMPILE_FLAGS})
set(TEST_INCLUDE_DIRS ${SPCHCNTRL_INCLUDE_DIRS}
    ${SPCHCNTRL_APP_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIRS} "../../"
    "../../../src/app" "../../../src/lib")
set(TEST_LIBRARIES ${SPCHCNTRL_LIBRARIES}
    ${SPCHCNTRL_APP_LIBRARIES}
    ${CPPTEST_LIBRARIES} spchcntrl)

QT4_AUTOMOC(${TEST_BASE_SCPP})
QT4_WRAP_CPP(TEST_BASE_SCPP "../../include/base.hpp")
QT4_WRAP_CPP(TEST_BASE_SCPP ${TEST_EXTRA_HDRS})

add_executable(test@TEST_ID@ ${TEST_BASE_SCPP})

message("${TEST_INCLUDE_DIRS}")
include_directories(${TEST_INCLUDE_DIRS})

set_target_properties(test@TEST_ID@ PROPERTIES
    COMPILE_DEFINITIONS "${TEST_COMPILE_DEFINITIONS}"
    COMPILE_FLAGS "${TEST_COMPILE_FLAGS}"
    EchoString "Built test @TEST_ID@"
    EXCLUDE_FROM_ALL ON)

target_link_libraries(test@TEST_ID@ ${TEST_LIBRARIES})

add_dependencies(test@TEST_ID@ spchcntrl)
add_dependencies(tests test@TEST_ID@)

add_test(NAME test@TEST_ID@ COMMAND $<TARGET_FILE:test@TEST_ID@>)

message(STATUS "Test ${TEST_ID} configured; awaiting build (i.e.: 'make test${TEST_ID}')")