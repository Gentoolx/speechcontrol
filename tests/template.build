########################################
### Build file for @TEST_ID@         ###
### DO NOT EDIT! Generated by CMake. ###
########################################

project(SpchCntrlTest-@TEST_ID@)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(TEST_MODE "@TEST_MODE@")
set(TEST_INCLUDE_FILE "${CMAKE_SOURCE_DIR}/tests/CTestConfig.cmake")

## Add paths to find CMake information about the library and application.
find_package(SpeechControlLibrary)
find_package(Qt4 COMPONENTS
    QtTest REQUIRED)

if (TEST_MODE STREQUAL "APP")
    find_package(SpeechControlApplication)
endif (TEST_MODE STREQUAL "APP")

set(TEST_BASE_SCPP "@TEST_SRC@")

if (TEST_MODE STREQUAL "APP")
    file(GLOB TEST_APP_SRCS
        "../../../src/app/*.cpp"
        "../../../src/app/dictation/*.cpp"
        "../../../src/app/voxforge/*.cpp"
        "../../../src/app/sessions/*.cpp"
        "../../../src/app/desktopcontrol/*.cpp")
    file (GLOB_RECURSE TEST_APP_WINDOW_SRCS "../../../src/app/windows/*.cpp")
    list(APPEND TEST_APP_SRCS ${TEST_APP_WINDOW_SRCS})
    list(REMOVE_ITEM TEST_APP_SRCS "${PROJECT_SOURCE_DIR}/../../../src/app/main.cpp")
endif (TEST_MODE STREQUAL "APP")

## Variables
set(TEST_COMPILE_DEFINITIONS ${SPCHCNTRL_COMPILE_DEFINITIONS})
set(TEST_COMPILE_FLAGS ${SPCHCNTRL_COMPILE_FLAGS})
set(TEST_LIBRARIES ${QT_QTTEST_LIBRARY})
set(TEST_INCLUDE_DIRS ${SPCHCNTRL_INCLUDE_DIRS}
    ${SPCHCNTRL_LIB_INCLUDE_DIRS}
    ${QT_INCLUDE_DIRS}
    "${PROJECT_BINARY_DIR}"
    "${CMAKE_BINARY_DIR}/src/lib"
    "${CMAKE_SOURCE_DIR}/src"
    "${CMAKE_SOURCE_DIR}/src/lib")

if (TEST_MODE STREQUAL "APP")
    list(APPEND TEST_INCLUDE_DIRS ${SPCHCNTRL_APP_INCLUDE_DIRS}
                                 "${CMAKE_BINARY_DIR}/src/app"
                                 "${CMAKE_SOURCE_DIR}/src/app")
    list(APPEND TEST_LIBRARIES ${SPCHCNTRL_APP_LIBRARIES})
    list(APPEND TEST_BASE_SCPP ${TEST_APP_SRCS})
else (TEST_MODE STREQUAL "APP")
    set(TEST_LIBRARIES ${SPCHCNTRL_LIBRARIES}
                        speechcontrol
                        ${QT_QTTEST_LIBRARY})
endif(TEST_MODE STREQUAL "APP")

include_directories(${TEST_INCLUDE_DIRS})

## Qt-specific actions.
QT4_AUTOMOC(${TEST_BASE_SCPP})

## Begin included code.

@TEST_CONFIG_CODE@

## End included code.

## Build test executable.
add_executable(test@TEST_ID@ ${TEST_BASE_SCPP})
set_target_properties(test@TEST_ID@ PROPERTIES
    COMPILE_DEFINITIONS "${TEST_COMPILE_DEFINITIONS}"
    COMPILE_FLAGS "${TEST_COMPILE_FLAGS} -fnopermissive"
    EchoString "Built test @TEST_ID@"
    EXCLUDE_FROM_ALL ON)
target_link_libraries(test@TEST_ID@ ${TEST_LIBRARIES})

## Set up dependencies.
if (TEST_MODE STREQUAL "LIB")
    add_dependencies(test@TEST_ID@ speechcontrol)
else(TEST_MODE STREQUAL "LIB")
    add_dependencies(test@TEST_ID@ speechcontrol-frontend)
endif(TEST_MODE STREQUAL "LIB")

## Add test.
add_test(NAME test@TEST_ID@ COMMAND $<TARGET_FILE:test@TEST_ID@>)
add_dependencies(tests test@TEST_ID@)

message(STATUS "Test '${TEST_ID}' configured; awaiting build [i.e.: 'make test${TEST_ID}']")